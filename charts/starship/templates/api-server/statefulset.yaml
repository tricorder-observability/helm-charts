apiVersion: apps/v1
# This is for ensuring the pvc that stores sqlite DB which has the module
# metadata.
# TODO(yaxiong): It's not clear if this is true though. Investigate and update.
kind: StatefulSet
metadata:
  name: api-server
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: api-server
    app.kubernetes.io/app: starship
spec:
  serviceName: api-server
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: api-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api-server
    spec:
      serviceAccountName: api-server
      containers:
        - name: api-server
          env:
          # This enables release mode for the GIN http framework.
          # Otherwise, GIN runs in DEBUG mode and prints too much logs.
          - name: GIN_MODE
            value: release
          image: "{{ .Values.apiServer.image.repository }}:{{ .Values.images.tag | default .Values.apiServer.image.tag }}"
          imagePullPolicy: {{ .Values.apiServer.image.pullPolicy }}
          args:
            # TODO(yaxiong): Consider move the args defined in values.yaml into here directly.
            {{- range .Values.apiServer.command.extraArgs }}
            - {{ . }}
            {{- end }}
            - --grafana_url=http://{{ .Release.Name }}-grafana:80
          volumeMounts:
          - name: tricorder-storage-volume
            mountPath: {{ .Values.apiServer.persistentVolumes.data.mountPath | quote }}
            subPath: {{ .Values.apiServer.persistentVolumes.data.subPath | quote }}
          # https://alesnosek.com/blog/2017/02/14/accessing-kubernetes-pods-from-outside-of-the-cluster/
          # TODO(yaxiong): See this for reference and later refinement.
          ports:
            {{- range $key, $port := .Values.apiServer.ports }}
            {{- if $port.enabled }}
            - name: {{ $key }}
              containerPort: {{ $port.containerPort }}
              protocol: {{ $port.protocol }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.apiServer.resources | nindent 12 }}
        - name: mgmt-ui
          image: "{{ .Values.ui.image.repository }}:{{ .Values.images.tag | default .Values.ui.image.tag }}"
          imagePullPolicy: {{ .Values.ui.image.pullPolicy }}
          env:
          - name: HELM_RELEASE_NAME
            value: {{ .Release.Name }}-grafana
          ports:
            {{- range $key, $port := .Values.ui.ports }}
            {{- if $port.enabled }}
            - name: {{ $key }}
              containerPort: {{ $port.containerPort }}
              protocol: {{ $port.protocol }}
            {{- end }}
            {{- end }}
          resources:
            {{- toYaml .Values.ui.resources | nindent 12 }}
      volumes:
      - name: tricorder-storage-volume
        emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: tricorder-storage-volume
        labels:
          app.kubernetes.io/app: starship
      spec:
        accessModes:
          {{ toYaml .Values.apiServer.persistentVolumes.data.accessModes | nindent 8 }}
        resources:
          requests:
            storage: "{{ .Values.apiServer.persistentVolumes.data.size }}"
