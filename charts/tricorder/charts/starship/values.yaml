imagePullSecrets: []
nameOverride: "tricorder"
fullnameOverride: ""

nodeSelector: {}

tolerations: []

affinity: {}

podAnnotations: {}

tag: "v0.1-3af4ba2c"
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "starship"

replicaCount: 1

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

apiServer:
  image:
    repository: public.ecr.aws/w3q2q1s5/api-server
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.1-3af4ba2c"

  ports:
    serverhttp:
      enabled: true
      containerPort: 8080
      servicePort: 8080
      hostPort: 8080
      protocol: TCP
    grpc:
      enabled: true
      containerPort: 50051
      servicePort: 50051
      hostPort: 50051
      protocol: TCP

  persistentVolumes:
    data:
      enabled: true
      ## database data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass:
      size: 200Mi
      subPath: "tricorder.db"
      mountPath: "/tricorder/"
      annotations: {}
      accessModes:
        - ReadWriteOnce
  command:
    extraArgs:
      - --module_db_dir_path=/tricorder/
      - --pg_url=postgresql://postgres:tricorder@timescaledb:5432/tricorder

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

agent:
  image:
    repository: public.ecr.aws/w3q2q1s5/tricorder-agent
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.1-3af4ba2c"

ui:
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  image:
    repository: public.ecr.aws/w3q2q1s5/mgmt-ui
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v0.1-3af4ba2c"

  ports:
    uihttp:
      enabled: true
      containerPort: 80
      servicePort: 80
      hostPort: 80
      protocol: TCP
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi


